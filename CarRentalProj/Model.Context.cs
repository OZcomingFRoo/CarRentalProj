//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRentalProj
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CarRentzEntities : DbContext
    {
        public CarRentzEntities()
            : base("name=CarRentzEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CarDetail> CarDetails { get; set; }
        public virtual DbSet<Car> Cars { get; set; }
        public virtual DbSet<ReservedCar> ReservedCars { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Worker> Workers { get; set; }
    
        public virtual ObjectResult<AdditionalSearch_Result> AdditionalSearch(string model, string company, string gT, Nullable<int> dRent)
        {
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var gTParameter = gT != null ?
                new ObjectParameter("GT", gT) :
                new ObjectParameter("GT", typeof(string));
    
            var dRentParameter = dRent.HasValue ?
                new ObjectParameter("DRent", dRent) :
                new ObjectParameter("DRent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdditionalSearch_Result>("AdditionalSearch", modelParameter, companyParameter, gTParameter, dRentParameter);
        }
    
        public virtual int CarDetailsChangeObs(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CarDetailsChangeObs", idParameter);
        }
    
        public virtual ObjectResult<string> CompanyTags()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CompanyTags");
        }
    
        public virtual ObjectResult<string> GetNameOfRentedCar(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetNameOfRentedCar", idParameter);
        }
    
        public virtual ObjectResult<string> ModelTags(string company)
        {
            var companyParameter = company != null ?
                new ObjectParameter("company", company) :
                new ObjectParameter("company", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ModelTags", companyParameter);
        }
    
        public virtual int RentCar(string carID, string userID, Nullable<System.DateTime> sD, Nullable<System.DateTime> eD)
        {
            var carIDParameter = carID != null ?
                new ObjectParameter("CarID", carID) :
                new ObjectParameter("CarID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var sDParameter = sD.HasValue ?
                new ObjectParameter("SD", sD) :
                new ObjectParameter("SD", typeof(System.DateTime));
    
            var eDParameter = eD.HasValue ?
                new ObjectParameter("ED", eD) :
                new ObjectParameter("ED", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RentCar", carIDParameter, userIDParameter, sDParameter, eDParameter);
        }
    
        public virtual int UpdateCar(string carId, string details, Nullable<int> kilometraz, Nullable<bool> isOp, string branch, Nullable<short> yearFactory)
        {
            var carIdParameter = carId != null ?
                new ObjectParameter("CarId", carId) :
                new ObjectParameter("CarId", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var kilometrazParameter = kilometraz.HasValue ?
                new ObjectParameter("Kilometraz", kilometraz) :
                new ObjectParameter("Kilometraz", typeof(int));
    
            var isOpParameter = isOp.HasValue ?
                new ObjectParameter("IsOp", isOp) :
                new ObjectParameter("IsOp", typeof(bool));
    
            var branchParameter = branch != null ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(string));
    
            var yearFactoryParameter = yearFactory.HasValue ?
                new ObjectParameter("YearFactory", yearFactory) :
                new ObjectParameter("YearFactory", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCar", carIdParameter, detailsParameter, kilometrazParameter, isOpParameter, branchParameter, yearFactoryParameter);
        }
    
        public virtual int UpdateCarType(string id, string model, string company, Nullable<short> dRent, Nullable<short> lRent, string gT, Nullable<bool> isObs, string oldId)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var dRentParameter = dRent.HasValue ?
                new ObjectParameter("DRent", dRent) :
                new ObjectParameter("DRent", typeof(short));
    
            var lRentParameter = lRent.HasValue ?
                new ObjectParameter("LRent", lRent) :
                new ObjectParameter("LRent", typeof(short));
    
            var gTParameter = gT != null ?
                new ObjectParameter("GT", gT) :
                new ObjectParameter("GT", typeof(string));
    
            var isObsParameter = isObs.HasValue ?
                new ObjectParameter("IsObs", isObs) :
                new ObjectParameter("IsObs", typeof(bool));
    
            var oldIdParameter = oldId != null ?
                new ObjectParameter("OldId", oldId) :
                new ObjectParameter("OldId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCarType", idParameter, modelParameter, companyParameter, dRentParameter, lRentParameter, gTParameter, isObsParameter, oldIdParameter);
        }
    
        public virtual int UpdateEmp(string id, string name, string password, string pro)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var proParameter = pro != null ?
                new ObjectParameter("Pro", pro) :
                new ObjectParameter("Pro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmp", idParameter, nameParameter, passwordParameter, proParameter);
        }
    
        public virtual int UpdateOrder(Nullable<int> rentID, string carID, string userID, Nullable<System.DateTime> sD, Nullable<System.DateTime> eD, Nullable<System.DateTime> returnedIn)
        {
            var rentIDParameter = rentID.HasValue ?
                new ObjectParameter("RentID", rentID) :
                new ObjectParameter("RentID", typeof(int));
    
            var carIDParameter = carID != null ?
                new ObjectParameter("CarID", carID) :
                new ObjectParameter("CarID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var sDParameter = sD.HasValue ?
                new ObjectParameter("SD", sD) :
                new ObjectParameter("SD", typeof(System.DateTime));
    
            var eDParameter = eD.HasValue ?
                new ObjectParameter("ED", eD) :
                new ObjectParameter("ED", typeof(System.DateTime));
    
            var returnedInParameter = returnedIn.HasValue ?
                new ObjectParameter("ReturnedIn", returnedIn) :
                new ObjectParameter("ReturnedIn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrder", rentIDParameter, carIDParameter, userIDParameter, sDParameter, eDParameter, returnedInParameter);
        }
    
        public virtual int UpdateProfile(string id, string name, string sex, Nullable<System.DateTime> bdate, string email)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var bdateParameter = bdate.HasValue ?
                new ObjectParameter("Bdate", bdate) :
                new ObjectParameter("Bdate", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProfile", idParameter, nameParameter, sexParameter, bdateParameter, emailParameter);
        }
    
        public virtual int UpdateUser(string id, string name, string sex, Nullable<System.DateTime> bdate, string email, string pSWD)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var bdateParameter = bdate.HasValue ?
                new ObjectParameter("Bdate", bdate) :
                new ObjectParameter("Bdate", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var pSWDParameter = pSWD != null ?
                new ObjectParameter("PSWD", pSWD) :
                new ObjectParameter("PSWD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", idParameter, nameParameter, sexParameter, bdateParameter, emailParameter, pSWDParameter);
        }
    }
}
